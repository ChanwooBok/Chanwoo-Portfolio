/* Global */
:root {
    /* Color */
    --color-white:  #ffffff;
    --color-light-white: #eeeeee;
    --color-dark-white:#bdbdbd;
    --color-pink:#fe918d;
    --color-dark-pink:#ff6863;
    --color-grey:#616161;
    --color-blue:#73aace;
    --color-yellow:#fff7d1;
    --color-orange:#feb546;
    --color-black:#000000;

    /* Font size */
    --font-large:48px;
    --font-medium:28px;
    --font-regular:18px;
    --font-small:16px;
    --font-micro:14px;

    /* Font weight */
    --weight-bold:700;
    --weight-semi-bold:600;
    --weight-regular:400;



    /* Size */
    --size-border-radius:4px;

    /* Animation  */
    --animation-duration: 300ms;
}
/* Universal tags */
* {
    box-sizing: border-box;
}

body {
    margin : 0;
    font-family: 'Roboto', sans-serif;
    cursor:default;
}

a {
    text-decoration: none;
    color: var(--color-white);
}

ul {
    list-style: none;
    padding-left: 0;
}

button {
    background-color: transparent;
    cursor: pointer;
    border:none;
    outline: none;
}

/* Typography */
h1 {
    font-size: var(--font-large);
    font-weight: var(--weight-bold);
    color: var(--color-black);
    margin: 16px 0 ;
}

h2 {
    font-size: var(--font-medium);
    font-weight: var(--weight-semi-boldbold);
    color: var(--color-black);
    margin: 8px 0 ;
}

h3 {
    font-size: var(--font-regular);
    font-weight: var(--weight-regular);
    color: var(--color-black);
    margin: 8px 0 ;
}

p {
    font-size: var(--font-regular);
    font-weight: var(--weight-regular);
    color: var(--color-black);
    margin: 4px 0 ;
}


/* Navbar */
#navbar {
    position: fixed;
    /* navbar는 항상 제일 위에 고정  되어 있으므로
    fixed 라고 설정해준다. */
    width: 100%;
    display: flex; 
    justify-content: space-between;
    background-color: transparent;
    align-items: center; 
    padding: 16px;
    transition: all var(--animation-duration) ease-in-out;
    z-index: 1;

}

#navbar.navbar--dark{
    background-color: var(--color-pink);
    padding : 16px;
}

.navbar__menu {
    display: flex;
    color:var(--color-white);   
}

.navbar__logo {
    font-size:  var(--font-medium);
    font-weight: var(--weight-semi-bold);
}

.navbar__menu__item{
    padding: 8px 12px;
    margin: 0 4px;
    cursor: pointer;
    border-radius: var(--size-border-radius);
    border: 1px solid transparent;
    /* 평소에는 border를 안 보이게 해놓고 hover가 되었을때만
    white로 지정해서 border가 나타나게 하자. */
}

.navbar__menu__item.active {
    border: 1px solid var(--color-white);
    
}



.navbar__menu__item:hover {
    border-color: var(--color-white);
    background-color: var(--color-pink);
    
}

.navbar__menu.page {
    border: 1px solid var(--color-white);
}




.navbar__toggle-btn {
    position: absolute;
    top:21px;
    right: 32px;
    font-size: 24px;
    color: var(--color-white);
    display: none;
    /* opacity를 이용하면 안되는 이유:
    숨겨지긴 하지만, 버튼이 클릭이 되버림 */
}


/* Home */

#home {
    background-color: green;
    /* url('img/background/background.png'); 왜 안되지? */
    padding: 40px;
    text-align: center;
    padding-top : 100px;
}

.home__avatar {
    width : 250px;
    height : 250px;
    border-radius: 50%;
    border: 2px solid var(--color-white);
}

.home__title,
.home__description {
    color:  var(--color-white);
}

.home__contact {
    color: var(--color-white);
    font-size: var(--font-regular);
    font-weight: var(--weight-bold);
    margin: 24px;
    padding: 8px 12px;
    border: 2px solid var(--color-white);
    border-radius: var(--size-border-radius);
}

.home__contact:hover {
    background-color: var(--color-orange);
}

/* section common */

.section {
    padding :16px;
    text-align: center;
    margin: auto;
}

.section__container {
    max-width: 1200px;
    margin:auto;
}

/* About */

.about__majors {
    display: flex;
    justify-content: space-between;
    margin : 80px 0 ;
}

.major__icon {
    /* background-color: yellow;
    눈에 잘 확인해가며 하기 위해 임의로 색을 지정하기도 한다.*/
    width: 170px;
    height: 170px;
    line-height: 170px;
    color:blue;
    font-size: 70px;
    margin : auto;
    border:1px solid var(--color-blue);
    border-radius: 50%;
    margin-bottom: 16px;
}


.major__icon i {
    transition: all var(--animation-duration) ease;
    /* 300ms는 답답하지 않은 표준화된 수치 */
}

.major__icon:hover i {
    /* icon클래스 전체말고 i 즉, 아이콘에 호버가 되었을때만 액션 */
    color: var(--color-pink);
    transform: rotate(-30deg) scale(1.2);
}

.major__title,
.major__description {
    color: var(--color-grey);
}

.major__description {
    font-size: var(--font-small);
}

.job {
    display: flex;
    align-items: center;
}

.job__description {
    margin: 0 16px;
    text-align: left;
}

.job__name,
.job__period{
    color: var(--color-grey);
}

.job__name { 
    font-size: var(--font-small);
}

.job__period {
    font-size: var(--font-micro);
}



/* SKill */

#skills {
    background-color: var(--color-yellow);
}

.skillset {
    display: flex;
    background-color: var(--color-grey);
    color:var(--color-light-white);
    margin: 20px 0;
}

.skillset__title {
    color: var(--color-white);
    margin-top: 16px;
}

.skillset__right {
    flex-basis: 40%;
}

.skillset__left {
    flex-basis:  60%;
    background-color: darkgray;
}

.skill {
    padding : 8px;
    margin-bottom: 32px;
}

.skilldescription {
    display: flex;
    justify-content: space-between;
    padding:20px 40px;
}

.skill__bar {
    width: 100%;
    height: 3px;
    background-color: var(--color-grey);
}

.skill__value { 
    /* width:100%; HTML,JAVASCRIPT,JAVA모두에게같은값이
    적용되어버리므로 style태그에 각각따로
    설정해주기. */
    height: 3px;
    background-color: var(--color-orange);
}

.tools,
.etc {
    padding: 20px;
}




/* Work */
.category__btn {
    border: 1px solid var(--color-dark-white);
    border-radius: var(--size-border-radius);
    font-size: var(--font-regular);
    padding: 8px 48px;
    position: relative;
}

.work__categories {
    margin: 40px;
}

.category__btn.selected,
.category__btn:hover {
    background-color: var(--color-pink);
    color: var(--color-white);
}

.category__btn.selected .category__count,
.category__btn:hover .category__count {
    opacity: 1;
    top:0;
}

.category__count{
    background-color: var(--color-orange);
    border-radius: 50%;
    color: var(--color-white);
    width: 24px;
    height: 24px;
    /* span이기 때문에 모양이 찌그러져 보인다.
    이럴땐 inline-block처리하고 line height를 
    span의 사이즈에 맞추면 동그랗게 가운데 온다. */
    line-height: 24px;
    display: inline-block;
    /* position: relative; */
    /* 창을 작게 하였을 때 , 모양이 가운데 정렬되지 못하므로 일단 absolute로 바꾸고
    부모 클래스인 category__btn을 static이 아닌 relative로 바꾼다. */
    position: absolute;
    /* top:-20px;
    left: 4px; 이제 부모클래스인 버튼안을 기준으로 움직이므로, 바꿔줘야함.*/
    top: -20px;
    right: 16px;
    opacity: 0;
    transition: all var(--animation-duration);
}

.work__projects {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    opacity: 1;
    transition: all var(--animation-duration) ease-out;
}

.work__projects.anim-out {
    opacity: 0;
    transform: scale(0.9) translateY(40px);
}

.projects {
    position: relative;
    /* description이 position : absolute 이므로
    바로 가까이 위에있는 부모인 projects를 static 이
    아닌 상태로 만들어줘야 project를 기준으로 top,left 자리를 
    정한다. */
    display: flex;
    justify-content: center;
    align-items: center;
    width: 280px;
    height: 250px;
    margin: 2px;
    background-color: var(--color-white);
}

.projects.invisible {
    display: none;
}

.project__img {
    max-width: 100%;
    max-heigt: 100%;
}

.project__description {
    position: absolute;
    display: flex;
    flex-direction: column;
    justify-content: center;
    background-color: black;
    display: flex;
    width: 100%;
    height: 100%;
    top:0;
    left:0;
    opacity: 0;
    transform: translateY(10px);
    /* 위치를 10px정도 y축 아래로 맞춰놓고,
    opcitiy가 0.8될 때 제 자리로 돌려놓을것  */
    transition: all var(--animation-duration);

}

.projects:hover .project__description {
    /* projects가 마우스 hover되었을때
    그 하위클래스인 projects description에서~
    화면이 생겨나게~ */
    opacity: 0.8;
    transform: translateY(0px);
}

.project__description h3{
    color: var(--color-orange);
}

.project__description h3:after {
    content: "";
    display: block;
    position: relative;
    left:50%;
    width: 50px;
    height: 2px;
    transform: translateX(-50%);
    background-color: var(--color-dark-white);
    margin-top: 8px;
}

/* Testimonial */
#testimonials {
    background-color: var(--color-light-white);
}

.testimonials {
    margin: 40px;
}
.testimonial {
    display: flex;
    margin: 32px 0;
}

.testimonials__speech-bubble {
    padding : 18px;
    background-color: var(--color-white);
}

.testimonials__avatar {
    width: 150px;
    height: 150px;
    border-radius: 50%;    
}

.testimonials__avatar:nth-child(odd) {
    margin-right:40px;
}

.testimonials__avatar:nth-child(even) {
    margin-left:40px;
}

.testimonials__speech-bubble p {
    color: var(--color-grey);
}

.testimonials__speech-bubble a {
    color: var(--color-pink);
}

/* Contact */
#contact {
    background-color: var(--color-pink);
}

.contact__email,
.contact__tilte,
.contact__rights {
    color : var(--color-white);
}

.contact__tilte {
    margin: 32px 0;
}

.contact__links {
    font-size: var(--font-large);
    margin: 24px 0;
    transition: all var(--animation-duration) ease-in;
}

.contact__links i:hover {
    /* 만약, contact__links:hover라고만 쓰면
    div컨테이너 자체가 커져버려서 촌스러우므로
    div안의 icon만 선택해줘야한다. */
    transform: scale(1.1);
    color: var(--color-yellow);
}

/* Scroll */

.arrow-up {
    position: fixed;
    bottom:50px;
    right:50px;
    width: 70px;
    height: 70px;
    font-size: 50px;
    color: var(--color-white);
    background-color: var(--color-pink);
    border-radius: 50%;
    /* display: none; 
    아예 사라지게 되므로,애니메이션 적용이 안된다.*/
    opacity: 0;
    transition: all 300ms ease-in-out;
    /* scroll했을때 생겨야 하니까 평소에는 숨겨둔다. */
    pointer-events: none;
}

.arrow-up.visible {
    /* display: block; */
    opacity: 1;
    pointer-events: auto;

}


/* For below 768px screen width */
@media screen and (max-width : 768px) {
  /* media query 안에는 768px이하 일때만
 나타나는 차이점들만 뽑아서 최소한으로 적어야 한다 */

:root {
        /* Font size */
        --font-large:30px;
        --font-medium:18px;
        --font-regular:16px;
        --font-small:14px;
        --font-micro:12px;
    
}


.navbar__toggle-btn {
    display: block;
    top:16px;
    right:16px;
    font-size: var(--font-medium);
}

#navbar {
    flex-direction: column;
    align-items: flex-start;
    background-color: var(--color-pink);
}
.navbar__menu {
    flex-direction: column;
    text-align: center;
    width: 100%;
    display: none;
}

.navbar__menu.open {
    display: block;
}


.section {
    padding:16px;
    padding-top: 40px;
}


.about__majors {
    flex-direction: column;
    margin-top: 30px;
    margin-bottom: 0px;
}

.major {
    margin-bottom: 30px;
}

.skillset {
    flex-direction: column;
}

.category__btn {
    margin: 4px 0;
    /* width:100%; */
}

.project {
    flex-grow: 1;
}

.testimonials__avatar {
    width : 120px;
    height: 120px;
    /* margin-bottom: 20px; */ 
    /* margin-bottom이 설정이 안되는 이유?
    아래에 있는 testimonials_avatar:nth-child(even)(odd)가
    더 세부적인 조건이라서 얘네가 이긴것임. 따라서 거기가서 
    margin bottom 을 설정해주어야 함. */
    
}

.testimonial {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.testimonials__avatar:nth-child(even),
.testimonials__avatar:nth-child(odd) {
    margin: 0;
    /* 위와 간격 맞추기. */
    margin-bottom: 8px;
}

.testimonials__speech-bubble {
    order: 1;
    /* 큰화면일때는 html순서를 조작해서 두번째 testimonial는 말풍선이 먼저나오게 했으나
    작은화면에서는 필요없다. order를 정해주자. 기본 1순위 order는 0이다.
     speechbubble은 order 1로 정해주어 아바타 뒤에 오게끔 한다. */
}

.arrow-up {
    width:50px;
    height: 50px;
    font-size: 30px;
    line-height: 50px;
    right:16px;
    bottom:16px;
}


}
